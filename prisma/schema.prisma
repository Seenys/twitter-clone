// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  userName String @unique
  bio String?
  email String @unique
  emailVerified DateTime?
  image String?
  coverImage String?
  profileImage String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followingIds String[] @db.ObjectId
  hasNotifications Boolean?


  // Relationships
  // User has many posts
  posts Post[]
  // User has many comments
  comments Comment[]
  // User has many Notifications
  notifications Notification[]
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  likesIds String[] @db.ObjectId

  // Relationships
  // Post belongs to User
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // Post has many comments
  comments Comment[]
}

model Comment{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    body String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId String @db.ObjectId
    postId String @db.ObjectId

    // Relationships
    // Comment belongs to User
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    // Comment belongs to Post
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    body String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId String @db.ObjectId

    // Relationships
    // Notification belongs to User
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}